<?xml version="1.0" encoding="UTF-8"?>
<!--
	The is main OSGi build file. It is included from projects
	as is.
	
	It is described in http://www2.osgi.org/members/Build/HomePage 
-->
<project name="master" default="none">

	<!-- 
	     INIT
	     The target is a dependent of all other targets.
	     It's purpose is to set up the environment only once
	     and avoid it being repeatedly done for each antcall.
	-->

	<target name="init" unless="initialized">
		<tstamp>
			<format property="NOW" pattern="yyyyMMdd-HHmm"/>
		</tstamp>
		
		<dirname property="projectdir" file="${ant.file}" />
		<dirname property="workspacedir" file="${projectdir}" />
		<taskdef resource="aQute/bnd/ant/taskdef.properties">
			<classpath>
				<path location="${workspacedir}/cnf/repo/biz.aQute.bnd/biz.aQute.bnd-1.43.0.jar"/>
				<path location="${workspacedir}/cnf/buildlib/bndtools.bndplugins.repos.jar"/>
			</classpath>
		</taskdef>
			<!-- classpath="${workspacedir}/cnf/repo/biz.aQute.bnd/biz.aQute.bnd-latest.jar" /-->

		<bndprepare basedir="${projectdir}" print="false" top="${release.dir}" />

		<!-- mark init has been run -->
		<property name="initialized" value="set" />
		<echo message="Enter project ${project.name}"/>
	</target>

	<!-- 
		DEPENDENCIES
		Build project dependencies.
	-->
	<target name="dependencies" depends="init" if="project.dependson" unless="donotrecurse">
		<subant target="build" inheritAll="false" buildpath="${project.dependson}">
			<property name="donotrecurse" value="true" />
		</subant>
	</target>

	<!--
	     Test
	-->
	<target name="test" depends="compile">
		<bnd command="test" exceptions="true" basedir="${project}" />
	</target>

	<!--
	     COMPILE
	     Compile the sources. 
	-->
	<target name="compile" depends="dependencies" if="project.sourcepath">
		<mkdir dir="${project.output}"/>
		<javac fork="yes" executable="${javac}" srcdir="${project.sourcepath}" destdir="${project.output}" classpath="${project.buildpath}" bootclasspath="${project.bootclasspath}" deprecation="true" listfiles="true" target="${javac.target}" source="${javac.source}" debug="${javac.debug}" includeAntRuntime="no" verbose="${verbose}" />
		<!-- 
		  The eclipse compiler copies resources but the Javac compiler does not
		  If ${src} == ${bin} then this is not necessary, but unfortunately, now 
		  it is. 
		-->
		<copy todir="${project.output}" verbose="${verbose}" preservelastmodified="true">
			<fileset dir="${project.sourcepath}">
				<exclude name="**/*.java" />
				<exclude name="**/*.class" />
			</fileset>
		</copy>
	</target>

	<!-- 
		JARS
		Iterate of the jars to build.
	-->
	<target name="build" depends="compile">
		<mkdir dir="${target}"/>
		<echo message="Building project ${project}."/>
		<bnd command="build" exceptions="true" basedir="${project}" />
	</target>

	<target name="junit" depends="build">
		<junit printsummary="true">			
			<classpath path="${project.buildpath}" />
			<formatter type="xml"/>
			<batchtest todir="tmp" >
			    <fileset dir="${src}">
			      <include name="test/**.java"/>
			    </fileset>
			</batchtest>
		</junit>
	</target>

	<!--
	     CLEAN
	-->
	<target name="deepclean" depends="init,clean" if="project.dependson">
		<subant target="clean" inheritAll="false" buildpath="${project.dependson}" />
	</target>

	<target name="clean" depends="init">
		<bnd command="clean" exceptions="true" basedir="${project}" />
		<delete dir="bin"/>
		<delete dir="${target}"/>
		
		<delete dir="${workspacedir}/cnf/tmp"/>
		<delete dir="${workspacedir}/cnf/p2target"/>
	</target>

	<!--
	     ECHO
	-->
	<target name="echo" depends="init">
		<echo>verbose:                ${verbose}</echo>
		<echo>project.name:           ${project.name}</echo>
		<echo>project.output:         ${project.output}</echo>
		<echo>project.sourcepath:     ${project.sourcepath}</echo>
		<echo>project.allsourcepath:  ${project.allsourcepath}</echo>
		<echo>project.buildpath:      ${project.buildpath}</echo>
		<echo>project.testpath:       ${project.testpath}</echo>
		<echo>project.dependson:      ${project.dependson}</echo>
		<echo>project.bootclasspath:  ${project.bootclasspath}</echo>
		<echo>javac:                  ${javac}</echo>
		<echo>p:                      ${p}</echo>
		<echo>btool.manifestVersion:  ${btool.manifestVersion}</echo>
		<echo>btool.analyse:          ${btool.analyse}</echo>
		<echo>btool.showmanifest:     ${btool.showmanifest}</echo>
		<echo>btool.noversion:     	  ${btool.noversion}</echo>
		<echo>btool.sources:     	  ${btool.sources}</echo>
		<echo>btool.noextraheaders:   ${btool.noextraheaders}</echo>
		<echo>jars.compile.order:     ${jars.compile.order}</echo>
		<echo>bin.includes:           ${bin.includes}</echo>
		<echo>base.modfied:           ${base.modified} (${base.modified.readable})</echo>
		<echo>target:                 ${target}</echo>
		<echo>release.target:         ${release.target}</echo>
		<echo>licensed repo:          ${licensed-repo}</echo>
		<echo>repo:                   ${repo}</echo>
		<echo>use.bnd:                ${use.bnd}</echo>
		<echo>nodeploy:               ${nodeploy}</echo>
		<echo>-dependson:             ${-dependson}</echo>

	</target>
	
	<target name="feature" depends="init">
		<mkdir dir="${workspacedir}/cnf/tmp"/>
		<copy todir="${workspacedir}/cnf/tmp">
			<fileset dir="${workspacedir}/cnf/feature" includes="*.xml"/>
		</copy>
		<replace dir="${workspacedir}/cnf/tmp" includes="*.xml" token="qualifier" value="${NOW}" summary="true"/>
		<zip destfile="${workspacedir}/cnf/tmp/feature.jar">
			<fileset dir="${workspacedir}/cnf/tmp" includes="feature.xml"/>
		</zip>
	</target>
	
	<target name="p2" depends="init,feature">
		<!-- Generate the p2 repository -->
		<java jar="${workspacedir}/cnf/eclipse-3.5.2/plugins/org.eclipse.equinox.launcher_1.0.201.R35x_v20090715.jar" fork="true">
			<!-- <arg line="-consoleLog"/> -->
			<arg line="-application org.eclipse.ant.core.antRunner"/>
			<arg line="-buildfile build.xml __internal_p2"/>
		</java>
		
		<!-- Append the category info -->
		<java jar="${workspacedir}/cnf/eclipse-3.5.2/plugins/org.eclipse.equinox.launcher_1.0.201.R35x_v20090715.jar" fork="true">
			<!-- <arg line="-consoleLog"/> -->
			<arg line="-application org.eclipse.equinox.p2.publisher.CategoryPublisher"/>
			<arg line="-metadataRepository file:${workspacedir}/cnf/p2target"/>
			<arg line="-categoryDefinition file:${workspacedir}/cnf/tmp/category.xml"/>
			<arg line="-compress"/>
		</java>
		
		<!-- Build the archive -->
		<zip file="${workspacedir}/cnf/bndtools-latest.zip">
			<zipfileset dir="${workspacedir}/cnf/p2target" includes="**"/>
		</zip>
	</target>
	
	<target name="__internal_p2" depends="init">
		<p2.publish.featuresAndBundles
				source="${workspacedir}"
				repository="file:${workspacedir}/cnf/p2target"
				append="false"
				repositoryname="Bndtools"
				compress="true">
			<features dir="${workspacedir}/cnf/tmp" includes="feature.jar"/>
			<bundles dir="${workspacedir}">
				<include name="bndtools.core/generated/*.jar"/>
				<include name="bndtools.jareditor/generated/*.jar"/>
				<include name="bndtools.repository.base/generated/*.jar"/>
				<include name="bndtools.diff/generated/*.jar"/>
				<include name="bndtools.release/generated/*.jar"/>
				<include name="bndtools.diff/generated/*.jar"/>
				<include name="bndtools.release/generated/*.jar"/>
				
				<include name="cnf/repo/com.springsource.org.objectweb.asm/com.springsource.org.objectweb.asm-3.1.0.jar"/>
				<include name="cnf/repo/com.springsource.org.objectweb.asm.tree/com.springsource.org.objectweb.asm.tree-3.1.0.jar"/>
				<include name="cnf/repo/javax.xml/javax.xml-1.3.4.jar"/>
				<include name="cnf/repo/javax.xml.stream/javax.xml.stream-1.0.1.jar"/>
				<include name="cnf/repo/stax2-api/stax2-api-3.1.1.jar"/>
				<include name="cnf/repo/woodstox-core-asl/woodstox-core-asl-4.1.1.jar"/>
			</bundles>
		</p2.publish.featuresAndBundles>
	</target>

	<!--
	     Default Target
	-->
	<target name="none">
		<fail message="This ant script should never be directly called." />
	</target>

</project>
