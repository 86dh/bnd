/*
 * maven Gradle build script
 */

def localrepo = System.getProperty('maven.repo.local')
if (localrepo) {
  localrepo = relativePath(uri(gradle.startParameter.currentDir).resolve(localrepo))
}
def releaserepo = uri(bnd('releaserepo', parent.file('dist/bundles'))) /* Release repository. */

tasks.create('deployOSSRH', Exec.class) {
  enabled !bnd('-releaserepo.ossrh', '').empty
  onlyIf {
        deploy.state.didWork && (deploy.state.failure == null)
  }
  if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
    executable 'cmd'
    args '/c', rootProject.file('mvnw.cmd')
  } else {
    executable rootProject.file('mvnw')
  }
  args '--batch-mode'
  if (logger.isDebugEnabled()) {
    args '--debug'
  }
  args '-Possrh'
  args "--settings=${parent.project('cnf').file('ext/ossrh-settings.xml')}"
  if (localrepo) {
    args "-Dmaven.repo.local=${localrepo}"
  }
  args 'deploy'
}

tasks.create('deployJFrog', Exec.class) {
  enabled !bnd('-releaserepo.jfrog', '').empty
  onlyIf {
        deploy.state.didWork && (deploy.state.failure == null)
  }
  if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
    executable 'cmd'
    args '/c', rootProject.file('mvnw.cmd')
  } else {
    executable rootProject.file('mvnw')
  }
  args '--batch-mode'
  if (logger.isDebugEnabled()) {
    args '--debug'
  }
  args '-Pjfrog'
  args "--settings=${parent.project('cnf').file('ext/jfrog-settings.xml')}"
  if (localrepo) {
    args "-Dmaven.repo.local=${localrepo}"
  }
  args 'deploy'
}

tasks.create('deploy', Exec.class) {
  dependsOn parent.tasks.getByPath('dist:jarDependencies')
  finalizedBy deployOSSRH, deployJFrog
  parent.tasks.getByPath('dist:releaseDependencies').mustRunAfter it
  if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
    executable 'cmd'
    args '/c', rootProject.file('mvnw.cmd')
  } else {
    executable rootProject.file('mvnw')
  }
  args '--batch-mode'
  if (logger.isDebugEnabled()) {
    args '--debug'
  }
  args '-Pdist'
  args "-Dreleaserepo=${releaserepo}"
  if (localrepo) {
    args "-Dmaven.repo.local=${localrepo}"
  }
  args 'deploy'
}
